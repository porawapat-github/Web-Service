{"ast":null,"code":"export default {\n  data() {\n    return {\n      // isAuthorized: false, // ตรวจสอบการอนุญาต\n    };\n  },\n  mounted() {\n    // console.log(sessionStorage.getItem(\"role\"));\n    // this.checkAuthorization(); // ตรวจสอบการอนุญาตเมื่อโหลดหน้า\n  },\n  methods: {\n    // checkAuthorization() {\n    //   const token = localStorage.getItem(\"token\"); // รับ JWT token\n    //   if (token) {\n    //     const payload = this.decodeToken(token); // แยกส่วน payload ของ JWT\n    //     if (payload && payload.role === \"admin\") {\n    //       this.isAuthorized = true; // ถ้า role เป็น admin\n    //     } else {\n    //       this.isAuthorized = false;\n    //     }\n    //   } else {\n    //     this.isAuthorized = false;\n    //   }\n    // },\n    // decodeToken(token) {\n    //   // ใช้ฟังก์ชัน decode JWT token (คุณสามารถใช้ library เช่น jwt-decode)\n    //   try {\n    //     return JSON.parse(atob(token.split(\".\")[1])); // แปลง JWT token ส่วน payload\n    //   } catch (error) {\n    //     console.error(\"Token decoding failed:\", error);\n    //     return null;\n    //   }\n    // },\n    // navigateTo(page) {\n    //   if (this.isAuthorized) {\n    //     this.$router.push({ name: page });\n    //   }\n    // },\n  }\n};","map":{"version":3,"names":["data","mounted","methods"],"sources":["D:\\Room-Reservation\\Web-Service\\frontend\\src\\components\\AdminComponent.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isAuthorized\" class=\"admin-container\">\r\n    <!-- <h2 class=\"admin-title\">Admin Dashboard</h2>\r\n    <div class=\"admin-actions\">\r\n      <div class=\"action-card\" @click=\"navigateTo('manage-products')\">\r\n        <h3>Manage Products</h3>\r\n      </div>\r\n      <div class=\"action-card\" @click=\"navigateTo('manage-orders')\">\r\n        <h3>Manage Orders</h3>\r\n      </div>\r\n      <div class=\"action-card\" @click=\"navigateTo('manage-users')\">\r\n        <h3>Manage Users</h3>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n\r\n  <!-- กรณีที่ไม่ได้รับอนุญาต -->\r\n  <div v-else class=\"unauthorized\">\r\n    <h2>Access Denied</h2>\r\n    <p>You are not authorized to access this page.</p>\r\n  </div>\r\n</template>\r\n    \r\n    <script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // isAuthorized: false, // ตรวจสอบการอนุญาต\r\n    };\r\n  },\r\n  mounted() {\r\n    // console.log(sessionStorage.getItem(\"role\"));\r\n    // this.checkAuthorization(); // ตรวจสอบการอนุญาตเมื่อโหลดหน้า\r\n  },\r\n  methods: {\r\n    // checkAuthorization() {\r\n    //   const token = localStorage.getItem(\"token\"); // รับ JWT token\r\n    //   if (token) {\r\n    //     const payload = this.decodeToken(token); // แยกส่วน payload ของ JWT\r\n    //     if (payload && payload.role === \"admin\") {\r\n    //       this.isAuthorized = true; // ถ้า role เป็น admin\r\n    //     } else {\r\n    //       this.isAuthorized = false;\r\n    //     }\r\n    //   } else {\r\n    //     this.isAuthorized = false;\r\n    //   }\r\n    // },\r\n    // decodeToken(token) {\r\n    //   // ใช้ฟังก์ชัน decode JWT token (คุณสามารถใช้ library เช่น jwt-decode)\r\n    //   try {\r\n    //     return JSON.parse(atob(token.split(\".\")[1])); // แปลง JWT token ส่วน payload\r\n    //   } catch (error) {\r\n    //     console.error(\"Token decoding failed:\", error);\r\n    //     return null;\r\n    //   }\r\n    // },\r\n    // navigateTo(page) {\r\n    //   if (this.isAuthorized) {\r\n    //     this.$router.push({ name: page });\r\n    //   }\r\n    // },\r\n  },\r\n};\r\n</script>\r\n    \r\n    <style scoped>\r\n.admin-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n  background-color: #f4f4f4;\r\n  border-radius: 10px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.unauthorized {\r\n  text-align: center;\r\n  padding: 40px;\r\n}\r\n\r\n.admin-title {\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  margin-bottom: 40px;\r\n  color: #2c3e50;\r\n}\r\n\r\n.admin-actions {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.action-card {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.action-card:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.unauthorized h2 {\r\n  color: red;\r\n}\r\n\r\n.unauthorized p {\r\n  color: gray;\r\n}\r\n</style>\r\n    "],"mappings":"AAwBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;IAAA,CACD;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA;EAAA,CACD;EACDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}